cmake_minimum_required(VERSION 3.15)
project(StochasticSim VERSION 1.0.0 LANGUAGES CXX)

set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED True)
set(CMAKE_CXX_EXTENSIONS OFF)

# Compiler options here...
if(MSVC)
    add_compile_options(
        /W4 /WX /permissive- /analyze /sdl /Zi /guard:cf /MP
    )
else()
    add_compile_options(
        -Wall -Wextra -Wpedantic -Werror
        -Wconversion -Wshadow -Wnon-virtual-dtor -pedantic-errors
    )
endif()

set(CMAKE_INCLUDE_CURRENT_DIR ON)
if(WIN32)
    set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)
endif()

# Define build type if not already defined.
if(NOT CMAKE_CONFIGURATION_TYPES AND NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE Debug CACHE STRING "Build type" FORCE)
  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS "Debug" "Release")
endif()

# (Other global settings…)

# Add subdirectories for each module.
add_subdirectory(Model)
add_subdirectory(Presenter)
add_subdirectory(View)

# If your main executable composes multiple modules, you can add it here.
# For example, if MainWindow (in View) is your primary GUI startup point, you may
# link with the View library:
add_executable(StochasticSim main.cpp)
target_link_libraries(StochasticSim PRIVATE ViewLib)

# (Optionally set global include directories for modules not using Qt)
target_include_directories(StochasticSim PRIVATE
  ${PROJECT_SOURCE_DIR}/include
  ${PROJECT_SOURCE_DIR}/Model
  ${PROJECT_SOURCE_DIR}/Presenter
)
