FUNCTIONALITY TODO:
- ensure distrib tick anchor is on EV
- super laggy to resize window when chart is populated with a lot of dense paths
- auto detect squishiness (e.g. exp beh gbm)
- implement memory usage
- implement icon for the process
- Let engine be stand alone process
- WASM (requires moving away from jthreads)
- Introduce new tab with live und data and option price and simulated option price
- Create engine process, use "named pipe" for more simple way to transfer data from engine to p1. (data needs to be copied twice)
-

CODE TODO:
- test with spamming sample
- test cancel many times
- search for TODO in codebase
- remove clangtidy from repo?

WRITE TESTS:
- one long simple path
- no vol, no drift
- seed
- multithread
- cancel
- solvers roughly same val
- processes
- exp val
- sample one query many times and assert results are the same each time. (no caching across jobs of the RNG objects)

PRESENTATION:
- Show bigger increment step -> bigger error.
- Show time vs cpu usage tradeoff w.r.t multithreading.
- Different solvers

Build note:
cmake --preset release
cmake --build --preset release

Readme:
Write about cancellation feature
Write about progress bar
multithreading and seedin options

technical readme:
Memory optimization (only keep the full paths of the drawn paths)
