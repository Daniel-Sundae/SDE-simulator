FUNCTIONALITY TODO:
- progress bar (paths simulated 15/50)
- implement error message
- Let engine be stand alone process
- WASM (requires moving away from jthreads)
- Introduce new tab with live und data and option price and simulated option price
- Create engine process, use "named pipe" for more simple way to transfer data from engine to p1. (data needs to be copied twice)
-  

CODE TODO:
- test with spamming sample
this assert fails sometimes...
void DistributionChart::plotDistribution(const Distribution& results){
    assert(m_distributionSet->count() == 0);)
- test cancel many times
- make sure can queue both deterministic and stochastic jobs. counting_sem with capacity 2.


PRESENTATION:
- Show bigger increment step -> bigger error.
- Show time vs cpu usage tradeoff w.r.t multithreading.
- Different solvers