FUNCTIONALITY TODO:
- set pathmax and pathmin resizing of pathplot
- ensure paths are sent as soon as finished
- in result tab, show which seed 
- write som sampling info: exp val, max endval, min endval, min/max path val seen (which path, store seed?)
- super laggy to resize window when chart is populated with a lot of dense paths
- auto detect squishiness (e.g. exp beh gbm)
- introduce meta data for jobs. Would allow for clean distribution and path plot.
  Info needed: size_t pathsCompleted, State largestEndVal, State smallestEndVal, State largestSeenState, State smallestSeenState
  Perhaps shared pointer to atomic inner POD struct instead?
- fix so "Cancelling..." only shows if job active.
- implement error message
- implement memory usage
- implement icon for the process
- Let engine be stand alone process
- WASM (requires moving away from jthreads)
- Introduce new tab with live und data and option price and simulated option price
- Create engine process, use "named pipe" for more simple way to transfer data from engine to p1. (data needs to be copied twice)
-

CODE TODO:
- test with spamming sample
- test cancel many times
- search for TODO in codebase
- remove clangtidy from repo?

WRITE TESTS:
- one long simple path
- no vol, no drift
- seed
- multithread
- cancel
- solvers roughly same val
- processes
- exp val

PRESENTATION:
- Show bigger increment step -> bigger error.
- Show time vs cpu usage tradeoff w.r.t multithreading.
- Different solvers

Build note:
cmake --preset release
cmake --build --preset release

Readme:
Write about cancellation feature
Write about progress bar
multithreading and seedin options

technical readme:
Memory optimization (only keep the full paths of the drawn paths)
