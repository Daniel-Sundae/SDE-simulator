FUNCTIONALITY TODO:
- progress bar (paths simulated 15/50)
- implement progress deterministic query first
- looks like rendering takes time. Move to thread? Clean up implementation in gui.
- implement error message
- cancelling takes a long time since std::vectors need to be created
- implement memory usage
- Let engine be stand alone process
- WASM (requires moving away from jthreads)
- Introduce new tab with live und data and option price and simulated option price
- Create engine process, use "named pipe" for more simple way to transfer data from engine to p1. (data needs to be copied twice)
-  

CODE TODO:
- ensure cancel after sampling done not doing anything
- ensure 
- test with spamming sample
- test cancel many times


PRESENTATION:
- Show bigger increment step -> bigger error.
- Show time vs cpu usage tradeoff w.r.t multithreading.
- Different solvers

Build note:
cmake --preset release
cmake --build --preset release